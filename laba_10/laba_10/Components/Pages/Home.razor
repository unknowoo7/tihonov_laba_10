@page "/"
@using Shared.Models
@using laba_10.Interfaces
@using System.Diagnostics
@using Microsoft.AspNetCore.Components.Web
@rendermode RenderMode.InteractiveServer

<PageTitle>Home</PageTitle>

<table class="table">
  <thead>
    <tr>
      <th>Id</th>
      <th>Name</th>
      <th>Description</th>
      <th>Price</th>
      <th>Manager</th>
      <th>Set Price</th>
      <th>Delete</th>
    </tr>
  </thead>
  <tbody>
    @foreach (var project in projects)
    {
      <tr>
        <td>@project.Id</td>
        <td>@project.Name</td>
        <td>@project.Description</td>
        <td>@project.Price</td>
        <td>
          <input type="number" value="@project.Manager?.Id" @onchange="@((ChangeEventArgs e) => UpdateProject(project.Id, e.Value.ToString()))" />
          <p>Value: @item</p>
        </td>
        <td>
          <input value="@project.Price" />
        </td>
        <td>
          <button @onclick="() => DeleteProject(project.Id)">
            X
          </button>
        </td>
      </tr>
    }
  </tbody>
</table>

<table class="table">
  <thead>
    <tr>
      <th>Id</th>
      <th>Name</th>
    </tr>
  </thead>
  <tbody>
    @foreach (var manager in managers)
    {
      <tr>
        <td>@manager.Id</td>
        <td>@manager.Name</td>
      </tr>
    }
  </tbody>
</table>

@code {
  string item = "hello";
  [Inject]
  public required IManager ManagerService { get; set; }

  [Inject]
  public required IProject ProjectService { get; set; }

  List<Project> projects = new List<Project>();
  List<Manager> managers = new List<Manager>();

  protected override async Task OnInitializedAsync() 
  {
    projects = @ProjectService.GetProjectDetails();
    managers = @ManagerService.GetManagerDetails();
  }

  void UpdateProject(int id, string managerId) {
    Project project = ProjectService.GetProjectData(id);

    project.ManagerId = int.Parse(managerId);
    ProjectService.UpdateProject(project);
  }

  void DeleteProject(int id)
  {
    ProjectService.DeleteProject(id);
  }
}
